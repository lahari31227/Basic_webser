pipeline {
    agent any

    parameters {
        string(name: 'CITY', defaultValue: 'New York', description: 'Enter the city name to fetch weather info')
    }

    environment {
        // Define the base URL or API endpoint in an environment variable for easy modification
        API_BASE_URL = 'http://54.81.137.151:80'  // Or use a domain if available
        IMAGE_NAME = 'myapp'
        CONTAINER_NAME = 'myappcontainer'
        API_KEY = 'c0ab46b8d4669349780d9a3d90394fba'  // Replace with your actual API key
    }

    stages {
        stage('Print City Parameter') {
            steps {
                script {
                    // Print the city parameter to Jenkins console
                    echo "City parameter: ${params.CITY}"
                }
            }
        }

        stage('Checkout Code') {
            steps {
                // Checkout the code from the repository
                git(
                    branch: 'main',
                    url: 'https://github.com/lahari31227/Basic_webser.git'
                )
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Building the Docker image from the Dockerfile
                    echo 'Building Docker image...'
                    sh 'docker build -t myapp:latest .'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container from the built image
                    echo 'Running Docker container...'
                    sh 'docker run -d --name myappcontainer -p 1234:80 myapp:latest'
                }
            }
        }

        stage('Verify Container') {
            steps {
                script {
                    // Check if the container is running
                    echo 'Verifying Docker container status...'
                    sh 'docker ps | grep myappcontainer'
                }
            }
        }
    }

    post {
        always {
            script {
                // Cleanup the Docker container and image after the pipeline run
                echo 'Cleaning up Docker container and image...'
                sh 'docker rm -f myappcontainer || true'
                sh 'docker rmi myapp:latest || true'
            }
        }
    }
}

